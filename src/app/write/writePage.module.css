.container {
  padding: 20px;
}

.editor {
  display: flex;
  gap: 30px;
  height: 700px;
  position: relative;
}
.button,
.addButton {
  width: 46px;
  height: 46px;
  border-radius: 50%;
  background-color: orange;
  border: 1px solid var(--textColor);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.addButton {
  background-color: rgb(182, 64, 129);
}
.add {
  display: flex;
  gap: 20px;
  background-color: var(--bg);
  position: absolute;
  z-index: 999;
  width: 100%;
  left: 70px;
}
.input {
  padding: 50px;
  font-size: 64px;
  border: none;
  outline: none;
  background-color: transparent;
}
.input::placeholder {
  color: grey;
}
.select {
  padding: 20px;
  font-size: 24px;
  border: 1px solid var(--textColor);
  background-color: var(--bg);
  color: var(--textColor);
  border-radius: 5px;
  margin-bottom: 20px;
}
.textArea {
  width: 100%;
}

/* Fix image width in editor */
.textArea :global(.ql-editor img) {
  max-width: 80% !important;
  height: auto !important;
  display: block !important;
  margin: 10px auto !important;
}

/* Quill editor specific styles to fix numbering issues */
.textArea :global(.ql-editor ol) {
  counter-reset: item !important;
  padding-left: 2em !important;
  margin-left: 0 !important;
}

.textArea :global(.ql-editor ol li) {
  list-style-type: none !important;
  counter-increment: item !important;
  position: relative !important;
  display: block !important;
}

.textArea :global(.ql-editor ol li::before) {
  content: counter(item) ". " !important;
  position: absolute !important;
  left: -2em !important;
  top: 0 !important;
  white-space: nowrap !important;
  font-weight: bold !important;
  color: inherit !important;
}

/* Reset any existing Quill styles that interfere */
.textArea :global(.ql-editor ol li[data-list]) {
  list-style-type: none !important;
}

.textArea :global(.ql-editor ol li[data-list="ordered"]) {
  list-style-type: none !important;
}

/* Ensure proper spacing */
.textArea :global(.ql-editor ol li) {
  margin-bottom: 0.5em !important;
  padding-left: 0 !important;
}

/* Nested lists */
.textArea :global(.ql-editor ol li ol) {
  counter-reset: item !important;
  padding-left: 2em !important;
}

.textArea :global(.ql-editor ol li ol li::before) {
  content: counter(item, lower-alpha) ". " !important;
}

.publish {
  position: absolute;
  top: 120px;
  right: 20px;
  padding: 10px 20px;
  border: none;
  background-color: green;
  color: white;
  cursor: pointer;
  border-radius: 20px;
}
